[{"/Users/wcap/thinkocapo/react-error-boundary/src/reportWebVitals.js":"1","/Users/wcap/thinkocapo/react-error-boundary/src/index.js":"2","/Users/wcap/thinkocapo/react-error-boundary/src/App.js":"3"},{"size":362,"mtime":1611269669509,"results":"4","hashOfConfig":"5"},{"size":814,"mtime":1611325654431,"results":"6","hashOfConfig":"5"},{"size":2881,"mtime":1611322409457,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1d15ndj",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"13"},"/Users/wcap/thinkocapo/react-error-boundary/src/reportWebVitals.js",[],["17","18"],"/Users/wcap/thinkocapo/react-error-boundary/src/index.js",[],["19","20"],"/Users/wcap/thinkocapo/react-error-boundary/src/App.js",["21"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from \"react\";\nimport * as Sentry from '@sentry/react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"This message is stored in a property on the component's state and it needs to be a string\",\n    };\n  }\n  /*\n  * Any errors thrown in a lifecycle callback will have a componentStack\n  * componentDidMount is a lifecycle callback and responsible for helping render the component tree\n  */\n  componentDidMount() {\n    // this.iWillMakeAComponentStack()\n  }\n\n  /*\n  * Errors thrown from this method will not have a componentStack, because this method is not lifecycle callback.\n  * so you will not see componentStack on the Issue in Sentry\n  */\n  nonLifecycleMethod() {\n    // this.tryMe()\n  }\n\n  render() {\n    const warningText = `\n    React encountered an error, but the Fallback component specified by your Sentry ErrorBoundary is now displaying, \n    rather than the crashed component tree (it was expecting a String, not an Object).\n    `\n    const suggestion = `\n    Use a styled fallback component and message here for your customer to see, rather than letting them\n    see what the React framework does when it crashes on itself!\n    `\n\n    return (\n      // This 'fallback' component is what displays when the React component tree crashes on itself\n      <Sentry.ErrorBoundary\n              fallback={({ error, componentStack, resetError }) => (\n                <React.Fragment>\n                  <h3>Fallback Component</h3>\n                  <div>{warningText}</div>\n                  <div>{suggestion}</div>\n                  \n                  <h3>Error:</h3>\n                  <div>{error.toString()}</div>\n                  \n                  <h3>Component Stack:</h3>\n                  <div>{componentStack}</div>\n                  \n                  <br></br>\n                  \n                  <button\n                    onClick={() => {\n                      this.setState({ message: \"I am a string value, and will restore the component tree from its failed state!\" });\n                      resetError();\n                    }}>\n                    Click here to reset!\n                  </button>\n                </React.Fragment>\n              )}\n            >\n              <h3>Component State:</h3>\n              <div>{this.state.message}</div>\n\n              <h3>On click, this button sets an Object as a message, not a String,</h3>\n              <h3>which will cause an error to occur in the React component tree:</h3>\n              <button\n                onClick={() => this.setState({ message: { text: \"I am an object value, and 'message' expects a string. Here comes an error!\" } })}\n              >\n                Click Me\n              </button>\n      </Sentry.ErrorBoundary>\n    )\n  }\n}\n\nexport default App;\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"22","replacedBy":"26"},{"ruleId":"24","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":12},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],["32"],["33"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]